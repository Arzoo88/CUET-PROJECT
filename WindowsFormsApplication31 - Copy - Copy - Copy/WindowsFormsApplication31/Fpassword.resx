<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>